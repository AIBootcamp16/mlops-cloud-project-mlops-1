version: "3.9"

services:
  mlflow:
    build:
      context: ../..
      dockerfile: infrastructure/docker/Dockerfile.mlflow
    env_file: .env
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_ENABLE_ARTIFACTS_SERVER=true
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
    command: >
      mlflow server
      --backend-store-uri ${MLFLOW_BACKEND_STORE_URI}
      --artifacts-destination ${MLFLOW_DEFAULT_ARTIFACT_ROOT}
      --host 0.0.0.0 --port 5000
      --serve-artifacts
    networks:
      - mlops
    volumes:
      - mlflow-data:/app/mlruns
      - mlflow-artifacts:/app/artifacts


  covid-analysis:
    build:
      context: ../..
      dockerfile: infrastructure/docker/Dockerfile.analysis
    working_dir: /workspace
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    ports:
      - "8888:8888"
    networks:
      - mlops
    depends_on:
      - mlflow
    volumes:
      - ../../data:/workspace/data
      - ../../models:/workspace/models

  airflow:
    build:
      context: ../..
      dockerfile: infrastructure/docker/Dockerfile.airflow
    env_file: .env
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - PROJECT_PATH=/workspace
      - PYTHONPATH=/workspace/src
      - AIRFLOW__CORE__DAGS_FOLDER=/workspace/src/dags
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__EdXECUTOR=SequentialExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=${AIRFLOW_STORE_URI}
      - COVID_TARGET=new_cases
      - COVID_TEST_DAYS=60
      - COVID_HORIZON=30
#      # AWS creds (S3 artifact root 접근용)
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
#      - MLFLOW_S3_ENDPOINT_URL=${MLFLOW_DEFAULT_ARTIFACT_ROOT}
    ports:
      - "8080:8080"
    depends_on:
      - mlflow
    networks:
      - mlops
    volumes:
      - ../../data-pipeline:/workspace
      - data_shared:/workspace/data
      - airflow-logs:/opt/airflow/logs

    # ========================================
    # 모니터링 대시보드 (Streamlit)
    # ========================================
  monitoring-dashboard:
    build:
      context: ../..
      dockerfile: infrastructure/docker/Dockerfile.monitoring
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - FASTAPI_URL=http://fastapi:8000
      - PYTHONPATH=/app
      - S3_BUCKET=${S3_BUCKET}
      # (선택) 피처/예측을 S3에서 직접 읽고 싶다면:
      - FEATURES_S3_PREFIX=s3://${S3_BUCKET}/features/
      # - MLFLOW_S3_ENDPOINT_URL=${MLFLOW_S3_ENDPOINT_URL}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - AWS_EC2_METADATA_DISABLED=true
    ports:
      - "8501:8501"
    depends_on:
      - mlflow
      - fastapi
    networks:
      - mlops
    volumes:
      - data_shared:/workspace/data
      - ../../monitoring:/app/monitoring
    command: streamlit run /app/monitoring/dashboard.py --server.port=8501 --server.address=0.0.0.0

  fastapi:
    build:
      context: ../..
      dockerfile: infrastructure/docker/Dockerfile.fastapi
    env_file: .env
    dns:
      - 8.8.8.8
      - 8.8.4.4
      - 1.1.1.1
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - PYTHONPATH=/app
      # API가 S3에서 피처를 읽도록 프리픽스 지정
      - FEATURES_S3_PREFIX=s3://${S3_BUCKET}/features/
      # (선택) 로컬 폴백 경로
      - FEATURES_LOCAL_PATH=/workspace/data/features/latest_features.csv
      # S3 접근에 필요한 크레덴셜
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      # 메타데이터 조회 비활성(컨테이너 환경에서 추천)
      - AWS_EC2_METADATA_DISABLED=true
      # OWID 다운로드 설정
      - USE_OWID_DIRECT=true
      - AUTO_PREDICT_WINDOW=1
      - DATA_CUTOFF_DATE=2023-03-31
      - MAX_FORECAST_DAYS=30
    ports:
      - "8000:8000"
    depends_on:
      - mlflow
    networks:
      - mlops
    volumes:
      - ../../api-service/src:/app/api   # <-- src만 마운트
      - data_shared:/workspace/data
    command: uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload



networks:
  mlops:
    driver: bridge

volumes:
  mlflow-data:
  mlflow-artifacts:
  airflow-logs:
  data_shared: {}

